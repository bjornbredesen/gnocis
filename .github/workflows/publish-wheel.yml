name: Publish to PyPI

on:
  release:
    types:
      - created

jobs:

  test-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest setuptools wheel twine cython numpy sklearn
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build package
      run: |
        cython -3 --cplus gnocis/*.pyx
        python setup.py sdist bdist_wheel
        cp dist/gnocis-*.whl dist/gnocis.whl
    - name: Install package
      run: |
        pip install dist/gnocis-*.whl
        mv gnocis/ gnocis_repo/
    - name: Run unit tests
      run: |
        python tests/run-all.py
  
  test-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.6]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest setuptools wheel twine cython numpy sklearn
    - name: Build package
      run: |
        Get-ChildItem "gnocis" -Filter *.pyx | Foreach-Object { cython -3 --cplus $_.FullName }
        python setup.py sdist bdist_wheel
    - name: Install package
      run: |
        Get-ChildItem "dist" -Filter *.whl | Foreach-Object { pip install $_.FullName }
        ren gnocis gnocis_repo
    - name: Run unit tests
      run: |
        python tests/run-all.py
  
  test-mac:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.6]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest setuptools wheel twine cython numpy sklearn
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build package
      run: |
        cython -3 --cplus gnocis/*.pyx
        python setup.py sdist bdist_wheel
        cp dist/gnocis-*.whl dist/gnocis.whl
    - name: Install package
      run: |
        pip install dist/gnocis-*.whl
        mv gnocis/ gnocis_repo/
    - name: Run unit tests
      run: |
        python tests/run-all.py
  
  publish-source:
    needs: [test-ubuntu, test-windows, test-mac]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest setuptools wheel twine cython numpy sklearn twine
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build package
      run: |
        cython -3 --cplus gnocis/*.pyx
        python setup.py sdist
    - name: Upload to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        TWINE_REPOSITORY_URL: 
      run: |
        twine upload dist/*

  publish-windows:
    needs: [test-ubuntu, test-windows, test-mac]
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        architecture: [x86, x64]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}, ${{ matrix.architecture }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest setuptools wheel twine cython numpy sklearn
    - name: Build package
      run: |
        Get-ChildItem "gnocis" -Filter *.pyx | Foreach-Object { cython -3 --cplus $_.FullName }
        python setup.py bdist_wheel
    - name: Upload to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        TWINE_REPOSITORY_URL: 
      run: |
        twine upload dist/*

  publish-mac:
    needs: [test-ubuntu, test-windows, test-mac]
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest setuptools wheel twine cython numpy sklearn
    - name: Build package
      run: |
        cython -3 --cplus gnocis/*.pyx
        python setup.py bdist_wheel
    - name: Upload to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        TWINE_REPOSITORY_URL: 
      run: |
        twine upload dist/*

